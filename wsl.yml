---
- hosts: all
  become: true
  become_user: root

  tasks:
    - name: "set-locale"
      shell: update-locale LANG=ja_JP.UTF-8

    - name: Set timezone to Asia/Tokyo
      file:
        src: /usr/share/zoneinfo/Asia/Tokyo
        path: /etc/localtime
        state: link
        force: yes
      notify:
        - update timezone

    - name: "put /etc/sudoers.d/{{ sudo_user_name }}"
      template:
        src: etc/sudoers.d/user_sudo
        dest: "/etc/sudoers.d/{{ sudo_user_name }}"
        owner: root
        group: root
        mode: 0440
        backup: true

    - name: Install Ubuntu common dev tool packages
      ansible.builtin.package:
        name:
          - ansible
          - bash-completion
          - bmon
          - curl
          - git
          - htop
          - iftop
          - iotop
          - iproute2
          - iputils-ping
          - iptraf
          - iptraf-ng
          - net-tools
          - nmap
          - sudo
          - sysstat
          - telnet
          - tree
          - unzip
          - vim
          - wget
          - zip
          - python3-pip
        state: present

    - name: "create {{ user_name }} .ssh/ dicrectory"
      file:
        path: "/home/{{ user_name }}/.ssh"
        state: directory
        mode: 0700
        owner: "{{ user_name }}"
        group: "{{ user_name }}"

    - name: "create {{ user_name }} .aws/ dicrectory"
      file:
        path: "/home/{{ user_name }}/.aws"
        state: directory
        mode: 0700
        owner: "{{ user_name }}"
        group: "{{ user_name }}"

    - name: ".aws/config"
      template:
        src: home/.aws/config
        dest: "/home/{{ user_name }}/.aws/config"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: 0600
        backup: true
    #######################################################################################################################
    # ホームディレクトリ関連
    #######################################################################################################################
    - name: set .bashrc
      template:
        src: home/.bashrc
        dest: "/home/{{ user_name }}/.bashrc"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        backup: true

    - name: set .bash_alias
      template:
        src: home/.bash_aliases.j2
        dest: "/home/{{ user_name }}/.bash_aliases"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        backup: true

    - name: set .profile
      template:
        src: home/.profile
        dest: "/home/{{ user_name }}/.profile"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        backup: true

    - name: set .bash_profile
      template:
        src: home/.bash_profile
        dest: "/home/{{ user_name }}/.bash_profile"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        backup: true

    - name: "set {{ user_name }} user .ssh/config"
      template:
        src: "home/.ssh/config.j2"
        dest: "/home/{{ user_name }}/.ssh/config"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: 0600
        backup: true

    - name: set wsl .gitconfig.j2
      template:
        src: home/.gitconfig.j2
        dest: "/home/{{ user_name }}/.gitconfig"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        backup: true

    - name: set wsl .gitignore_global
      template:
        src: home/.gitignore_global.j2
        dest: "/home/{{ user_name }}/.gitignore_global"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        backup: true

    - name: apt add golang repository
      ansible.builtin.apt_repository:
        repo: ppa:longsleep/golang-backports

    - name: Install golang
      ansible.builtin.package:
        name:
          - golang
          - golang-go
        state: present

    - name: Install nodejs and npm
      ansible.builtin.package:
        name:
          - nodejs
          - npm
        state: present

    - name: npmでgo-task/cliをグローバルインストール
      npm:
        name: "@go-task/cli"
        global: yes
        state: present
